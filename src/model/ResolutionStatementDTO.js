/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import ResolutionEntryDTO from './ResolutionEntryDTO';
import UInt64DTO from './UInt64DTO';





/**
* The ResolutionStatementDTO model module.
* @module model/ResolutionStatementDTO
* @version 0.7.15
*/
export default class ResolutionStatementDTO {
    /**
    * Constructs a new <code>ResolutionStatementDTO</code>.
    * A resolution statement keeps the relation between a namespace alias used in a transaction and the real address or mosaicId.
    * @alias module:model/ResolutionStatementDTO
    * @class
    * @param height {module:model/UInt64DTO} 
    * @param unresolved {module:model/UInt64DTO} 
    * @param resolutionEntries {Array.<module:model/ResolutionEntryDTO>} The array of resolution entries linked to the unresolved namespaceId. It is an array instead of a single UInt64 field since within one block the resolution might change for different sources due to alias related transactions.
    */

    constructor(height, unresolved, resolutionEntries) {
        

        
        

        this['height'] = height;this['unresolved'] = unresolved;this['resolutionEntries'] = resolutionEntries;

        
    }

    /**
    * Constructs a <code>ResolutionStatementDTO</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ResolutionStatementDTO} obj Optional instance to populate.
    * @return {module:model/ResolutionStatementDTO} The populated <code>ResolutionStatementDTO</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResolutionStatementDTO();

            
            
            

            if (data.hasOwnProperty('height')) {
                obj['height'] = UInt64DTO.constructFromObject(data['height']);
            }
            if (data.hasOwnProperty('unresolved')) {
                obj['unresolved'] = UInt64DTO.constructFromObject(data['unresolved']);
            }
            if (data.hasOwnProperty('resolutionEntries')) {
                obj['resolutionEntries'] = ApiClient.convertToType(data['resolutionEntries'], [ResolutionEntryDTO]);
            }
        }
        return obj;
    }

    /**
    * @member {module:model/UInt64DTO} height
    */
    height = undefined;
    /**
    * @member {module:model/UInt64DTO} unresolved
    */
    unresolved = undefined;
    /**
    * The array of resolution entries linked to the unresolved namespaceId. It is an array instead of a single UInt64 field since within one block the resolution might change for different sources due to alias related transactions.
    * @member {Array.<module:model/ResolutionEntryDTO>} resolutionEntries
    */
    resolutionEntries = undefined;








}


