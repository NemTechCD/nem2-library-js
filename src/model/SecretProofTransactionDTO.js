/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import EntityTypeEnum from './EntityTypeEnum';
import HashAlgorithmEnum from './HashAlgorithmEnum';
import NetworkTypeEnum from './NetworkTypeEnum';
import SecretProofTransactionBodyDTO from './SecretProofTransactionBodyDTO';
import TransactionDTO from './TransactionDTO';
import UInt64DTO from './UInt64DTO';





/**
* The SecretProofTransactionDTO model module.
* @module model/SecretProofTransactionDTO
* @version 0.7.15
*/
export default class SecretProofTransactionDTO {
    /**
    * Constructs a new <code>SecretProofTransactionDTO</code>.
    * Transaction that revealed a proof.
    * @alias module:model/SecretProofTransactionDTO
    * @class
    * @implements module:model/TransactionDTO
    * @implements module:model/SecretProofTransactionBodyDTO
    * @param signature {String} The signature of the entity. The signature was generated by the signer and can be used to validate tha the entity data was not modified by a node. 
    * @param signer {String} The public key of the entity signer formatted as hexadecimal.
    * @param version {module:model/NetworkTypeEnum} 
    * @param type {module:model/EntityTypeEnum} 
    * @param maxFee {module:model/UInt64DTO} 
    * @param deadline {module:model/UInt64DTO} 
    * @param hashAlgorithm {module:model/HashAlgorithmEnum} 
    * @param secret {String} The proof hashed.
    * @param proof {String} The original random set of bytes.
    */

    constructor(signature, signer, version, type, maxFee, deadline, hashAlgorithm, secret, proof) {
        



        

        
    }

    /**
    * Constructs a <code>SecretProofTransactionDTO</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/SecretProofTransactionDTO} obj Optional instance to populate.
    * @return {module:model/SecretProofTransactionDTO} The populated <code>SecretProofTransactionDTO</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecretProofTransactionDTO();

            
            
            TransactionDTO.constructFromObject(data, obj);SecretProofTransactionBodyDTO.constructFromObject(data, obj);

        }
        return obj;
    }



    // Implement TransactionDTO interface:
    /**
    * The signature of the entity. The signature was generated by the signer and can be used to validate tha the entity data was not modified by a node. 
    * @member {String} signature
    */
    signature = undefined;
/**
    * The public key of the entity signer formatted as hexadecimal.
    * @member {String} signer
    */
    signer = undefined;
/**
    * @member {module:model/NetworkTypeEnum} version
    */
    version = undefined;
/**
    * @member {module:model/EntityTypeEnum} type
    */
    type = undefined;
/**
    * @member {module:model/UInt64DTO} max_fee
    */
    max_fee = undefined;
/**
    * @member {module:model/UInt64DTO} deadline
    */
    deadline = undefined;

    // Implement SecretProofTransactionBodyDTO interface:
    /**
    * @member {module:model/HashAlgorithmEnum} hashAlgorithm
    */
    hashAlgorithm = undefined;
/**
    * The proof hashed.
    * @member {String} secret
    */
    secret = undefined;
/**
    * The original random set of bytes.
    * @member {String} proof
    */
    proof = undefined;







}


