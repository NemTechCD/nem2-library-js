/**
 * Catapult REST API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BlockDTO from './BlockDTO';
import BlockMetaDTO from './BlockMetaDTO';

/**
 * The BlockInfoDTO model module.
 * @module model/BlockInfoDTO
 * @version 0.7.15
 */
class BlockInfoDTO {
    /**
     * Constructs a new <code>BlockInfoDTO</code>.
     * @alias module:model/BlockInfoDTO
     * @param meta {module:model/BlockMetaDTO} 
     * @param block {module:model/BlockDTO} 
     */
    constructor(meta, block) { 
        
        BlockInfoDTO.initialize(this, meta, block);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, meta, block) { 
        obj['meta'] = meta;
        obj['block'] = block;
    }

    /**
     * Constructs a <code>BlockInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BlockInfoDTO} obj Optional instance to populate.
     * @return {module:model/BlockInfoDTO} The populated <code>BlockInfoDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BlockInfoDTO();

            if (data.hasOwnProperty('meta')) {
                obj['meta'] = BlockMetaDTO.constructFromObject(data['meta']);
            }
            if (data.hasOwnProperty('block')) {
                obj['block'] = BlockDTO.constructFromObject(data['block']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/BlockMetaDTO} meta
 */
BlockInfoDTO.prototype['meta'] = undefined;

/**
 * @member {module:model/BlockDTO} block
 */
BlockInfoDTO.prototype['block'] = undefined;






export default BlockInfoDTO;

