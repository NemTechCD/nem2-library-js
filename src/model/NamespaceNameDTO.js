/**
 * Catapult REST API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The NamespaceNameDTO model module.
* @module model/NamespaceNameDTO
* @version 0.7.15
*/
export default class NamespaceNameDTO {
    /**
    * Constructs a new <code>NamespaceNameDTO</code>.
    * @alias module:model/NamespaceNameDTO
    * @class
    * @param namespaceId {module:model/UInt64DTO} 
    * @param name {String} The name of the namespace.
    */

    constructor(namespaceId, name) {
        

        
        NamespaceNameDTO.initialize(this, namespaceId, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, namespaceId, name) { 
        obj['namespaceId'] = namespaceId;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>NamespaceNameDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NamespaceNameDTO} obj Optional instance to populate.
     * @return {module:model/NamespaceNameDTO} The populated <code>NamespaceNameDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NamespaceNameDTO();

            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], ['Number']);
            }
            if (data.hasOwnProperty('namespaceId')) {
                obj['namespaceId'] = ApiClient.convertToType(data['namespaceId'], ['Number']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {module:model/UInt64DTO} parentId
    */
    parentId = undefined;
    /**
    * @member {module:model/UInt64DTO} namespaceId
    */
    namespaceId = undefined;
    /**
    * The name of the namespace.
    * @member {String} name
    */
    name = undefined;

}

/**
 * @member {Array.<Number>} parentId
 */
NamespaceNameDTO.prototype['parentId'] = undefined;

/**
 * @member {Array.<Number>} namespaceId
 */
NamespaceNameDTO.prototype['namespaceId'] = undefined;

/**
 * The name of the namespace.
 * @member {String} name
 */
NamespaceNameDTO.prototype['name'] = undefined;






export default NamespaceNameDTO;

