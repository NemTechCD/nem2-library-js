/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import EmbeddedTransactionDTO from './EmbeddedTransactionDTO';
import EntityTypeEnum from './EntityTypeEnum';
import MosaicDefinitionTransactionBodyDTO from './MosaicDefinitionTransactionBodyDTO';
import MosaicPropertyDTO from './MosaicPropertyDTO';
import NetworkTypeEnum from './NetworkTypeEnum';
import UInt64DTO from './UInt64DTO';





/**
* The EmbeddedMosaicDefinitionTransactionDTO model module.
* @module model/EmbeddedMosaicDefinitionTransactionDTO
* @version 0.7.15
*/
export default class EmbeddedMosaicDefinitionTransactionDTO {
    /**
    * Constructs a new <code>EmbeddedMosaicDefinitionTransactionDTO</code>.
    * @alias module:model/EmbeddedMosaicDefinitionTransactionDTO
    * @class
    * @implements module:model/EmbeddedTransactionDTO
    * @implements module:model/MosaicDefinitionTransactionBodyDTO
    * @param signer {String} The public key of the entity signer formatted as hexadecimal.
    * @param version {module:model/NetworkTypeEnum} 
    * @param type {module:model/EntityTypeEnum} 
    * @param maxFee {module:model/UInt64DTO} 
    * @param deadline {module:model/UInt64DTO} 
    * @param mosaicNonce {Number} Random nonce used to generate the mosaic id.
    * @param mosaicId {module:model/UInt64DTO} 
    * @param properties {Array.<module:model/MosaicPropertyDTO>} 
    */

    constructor(signer, version, type, maxFee, deadline, mosaicNonce, mosaicId, properties) {
        



        

        
    }

    /**
    * Constructs a <code>EmbeddedMosaicDefinitionTransactionDTO</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/EmbeddedMosaicDefinitionTransactionDTO} obj Optional instance to populate.
    * @return {module:model/EmbeddedMosaicDefinitionTransactionDTO} The populated <code>EmbeddedMosaicDefinitionTransactionDTO</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmbeddedMosaicDefinitionTransactionDTO();

            
            
            EmbeddedTransactionDTO.constructFromObject(data, obj);MosaicDefinitionTransactionBodyDTO.constructFromObject(data, obj);

        }
        return obj;
    }



    // Implement EmbeddedTransactionDTO interface:
    /**
    * The public key of the entity signer formatted as hexadecimal.
    * @member {String} signer
    */
    signer = undefined;
/**
    * @member {module:model/NetworkTypeEnum} version
    */
    version = undefined;
/**
    * @member {module:model/EntityTypeEnum} type
    */
    type = undefined;
/**
    * @member {module:model/UInt64DTO} max_fee
    */
    max_fee = undefined;
/**
    * @member {module:model/UInt64DTO} deadline
    */
    deadline = undefined;

    // Implement MosaicDefinitionTransactionBodyDTO interface:
    /**
    * Random nonce used to generate the mosaic id.
    * @member {Number} mosaicNonce
    */
    mosaicNonce = undefined;
/**
    * @member {module:model/UInt64DTO} mosaicId
    */
    mosaicId = undefined;
/**
    * @member {Array.<module:model/MosaicPropertyDTO>} properties
    */
    properties = undefined;







}


