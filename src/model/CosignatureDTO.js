/**
 * Catapult REST API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CosignatureDTOAllOf from './CosignatureDTOAllOf';
import VerifiableEntityDTO from './VerifiableEntityDTO';

/**
 * The CosignatureDTO model module.
 * @module model/CosignatureDTO
 * @version 0.7.15
 */
class CosignatureDTO {
    /**
     * Constructs a new <code>CosignatureDTO</code>.
     * @alias module:model/CosignatureDTO
     * @implements module:model/VerifiableEntityDTO
     * @implements module:model/CosignatureDTOAllOf
     */
    constructor() { 
        VerifiableEntityDTO.initialize(this, signature);CosignatureDTOAllOf.initialize(this, signer);
        CosignatureDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['signature'] = signature;
        obj['signer'] = signer;
    }

    /**
     * Constructs a <code>CosignatureDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CosignatureDTO} obj Optional instance to populate.
     * @return {module:model/CosignatureDTO} The populated <code>CosignatureDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CosignatureDTO();
            VerifiableEntityDTO.constructFromObject(data, obj);
            CosignatureDTOAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('signature')) {
                obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
            }
            if (data.hasOwnProperty('signer')) {
                obj['signer'] = ApiClient.convertToType(data['signer'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The signature of the entity. The signature was generated by the signer and can be used to validate tha the entity data was not modified by a node. 
 * @member {String} signature
 */
CosignatureDTO.prototype['signature'] = undefined;

/**
 * The public key of the transaction signer.
 * @member {String} signer
 */
CosignatureDTO.prototype['signer'] = undefined;


// Implement VerifiableEntityDTO interface:
/**
 * The signature of the entity. The signature was generated by the signer and can be used to validate tha the entity data was not modified by a node. 
 * @member {String} signature
 */
VerifiableEntityDTO.prototype['signature'] = undefined;
// Implement CosignatureDTOAllOf interface:
/**
 * The public key of the transaction signer.
 * @member {String} signer
 */
CosignatureDTOAllOf.prototype['signer'] = undefined;




export default CosignatureDTO;

